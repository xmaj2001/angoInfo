generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Member {
  id        Int       @id @default(autoincrement())
  avatar    String?
  name      String
  email     String?   @unique
  phone     String?
  birthDate DateTime? @map("birth_date")
  status    String    @default("active") // active, inactive
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  payments  Payment[] // Relação com pagamentos
}

model User {
  id          Int          @id @default(autoincrement())
  avatar      String?
  name        String
  email       String       @unique
  password    String // Hashed
  role        String // admin, treasurer, pastor
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  paymentLogs PaymentLog[] // Relação com logs de alterações
}

model Payment {
  id          Int          @id @default(autoincrement())
  memberId    Int          @map("member_id")
  member      Member       @relation(fields: [memberId], references: [id])
  type        String // tithe, offering
  amount      Float
  date        DateTime
  description String?
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  logs        PaymentLog[] // Relação com logs de alterações
}

model PaymentLog {
  id          Int      @id @default(autoincrement())
  paymentId   Int      @map("payment_id")
  payment     Payment  @relation(fields: [paymentId], references: [id])
  oldAmount   Float    @map("old_amount")
  newAmount   Float    @map("new_amount")
  changedById Int      @map("changed_by_id")
  changedBy   User     @relation(fields: [changedById], references: [id])
  changedAt   DateTime @default(now()) @map("changed_at")
  description String?
}

model Expense {
  id          Int      @id @default(autoincrement())
  category    String // rent, utilities, events
  amount      Float
  date        DateTime
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
}

model Notification {
  id        String   @id @default(uuid()) @map("_id")
  image     String?
  title     String
  about     String
  link      String?
  type      Int      @default(0)
  target    String?
  usersView String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("notifications")
}

model MonthlyGoal {
  id        Int      @id @default(autoincrement())
  year      Int
  month     Int // 1 a 12
  goal      Float 
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}